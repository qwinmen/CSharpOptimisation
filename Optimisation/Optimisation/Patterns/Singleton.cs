namespace Optimisation.Patterns
{
	/*
	 * Синглтон (Одиночка)
	 * - шаблон создающего типа (создающие, поведения, структурные).
	 * - проблема в необходимости использовать лишь один экземпляр обьекта.
	 * - суть щаблона - определить лишь один экземпляр типа на все приложение и использовать лишь его.
	 */
	public class Singleton
	{
		//readonly - делает обьект потокобезопасным.
		//Однократно создать обьект
		private static readonly Singleton s_value = new Singleton();

		//Конструктор закрытого типа для закрытия возможности создания экземпляров обьекта
		private Singleton()
		{
		}

		//Запросить обьект
		public static Singleton GetSingleton()
		{
			return s_value;
		}
	}
}